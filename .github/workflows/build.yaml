name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Build and Upload Artifacts
      run: |
        pip install build
        python -m build
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        path: dist/*
        name: artifacts
  deploy:
    needs: build # Rely on the build job to prepare artifacts
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
          name: artifacts
          path: dist
    - name: SSH Connect to EC2
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        # Optional: configure other SSH parameters if needed
    - name: Copy dist to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        src: dist/
        dest: /home/ubuntu/
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
    - name: Extract and Deploy
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        commands: |
          unzip -o /home/ubuntu/dist/*.zip
          cd /home/ubuntu/dist/*
          pip install -r requirements.txt
          # Resume application-specific deployment steps
          # (Example for Flask app)
          # gunicorn your_app:app -b 0.0.0.0:5000
          # systemctl restart your_app-service
          # nginx -s reload
