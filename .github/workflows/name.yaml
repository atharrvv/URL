name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    if: ${{ steps.test_conditions.outputs.should_run_tests }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies for testing
        run: |
          [ -f "requirements.txt" ] && pip install -r requirements.txt

      - name: Run Tests Without Framework
        run: |
          if [ -d "tests" ]; then
            echo "Running Tests..."
            
            python -m unittest discover -s tests
          else
            echo "No test folder found"
            exit 0;

      - name: Upload Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: tests/

  build:
    needs: test
    if: ${{ steps.build_conditions.outputs.should_run_build }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies for build
        run: |
          [ -f "requirements.txt" ] && pip install -r requirements.txt

      - name: Build with setuptools
        run: |
          [ -f "setup.py" ] && python setup.py sdist bdist_wheel

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifacts from Build Job
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: SSH into EC2 and Deploy
        run: |
          ssh -o StrictHostKeyChecking=no -i "${{ secrets.EC2_SSH_KEY }}" ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
          mkdir -p ~/app-deploy
          cd ~/app-deploy
          rm -rf *
          scp -i "${{ secrets.EC2_SSH_KEY }}" dist/* ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/app-deploy/
          python manage.py collectstatic --noinput
          python manage.py migrate
          sudo systemctl restart gunicorn
          curl -f http://127.0.0.1:8000/ || { echo "Deployment Health Check Failed"; exit 1; }
          EOF
