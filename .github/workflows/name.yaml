name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PYTHON_VERSION: 3.10

jobs:

  database-setup:
    name: Setup Database
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install MySQL/PostgreSQL Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client postgresql-client

      - name: Setup Database Configuration
        run: |
          echo 'CREATE DATABASE pygmy;' | mysql -u root
          cp pygmy/config/pygmy.cfg /etc/pygmy.cfg

      - name: Validate Database Connectivity
        run: |
          mysql -u root -e 'show databases;'

  deploy-to-ec2:
    name: Deploy to EC2
    needs: [database-setup]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup SSH Connection
        run: |
          mkdir -p ~/.ssh
          echo '${{ secrets.EC2_SSH_KEY }}' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Transfer Application Files
        run: |
          scp -i ~/.ssh/id_rsa -P ${{ secrets.EC2_PORT }} -r . ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/var/www/app

      - name: SSH into EC2 and Run Commands
        run: |
          ssh -i ~/.ssh/id_rsa -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
            sudo apt-get update
            sudo apt-get install -y python3.10 python3.10-venv
            python3 -m venv env
            source env/bin/activate
            pip install -r requirements.txt
            crewai install
            crewai run
          EOF

      - name: Health Check
        run: |
          curl -f http://${{ secrets.EC2_HOST }}:8000 || exit 1
          curl -f http://${{ secrets.EC2_HOST }}:9119 || exit 1
