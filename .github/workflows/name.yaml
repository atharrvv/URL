name: Test and Build
on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
      # Step: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step: Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # # Step: Cache Python packages
      # - name: Cache Python dependencies
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.cache/pip
      #     key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-${{ matrix.python-version }}

      # Step: Install dependencies
      - name: Install dependencies
        run: |
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          elif [ -f "requirements-test.txt" ]; then
            pip install -r requirements-test.txt
          elif [ -f "pyproject.toml" ]; then
            pip install poetry
            poetry install --no-root
          elif [ -f "Pipfile" ]; then
            pip install pipenv
            pipenv install --dev
          else
            echo "No dependency file found. Skipping dependency installation."
            exit 0
          fi

      # Step: Run tests
      - name: Run tests
        run: |
          if [ -f "pytest.ini" ] || [ -f "pyproject.toml" ] || [ -f "setup.cfg" ]; then
            python -m pytest --cov || python -m pytest
          else
            python -m pytest
        shell: bash

      # Conditional step: Comment if no tests directory exists
      - name: Skip tests (No tests/ directory found)
        if: ${{ !files.exists('tests/') }}
        run: echo "No 'tests/' directory found. Skipping tests."
